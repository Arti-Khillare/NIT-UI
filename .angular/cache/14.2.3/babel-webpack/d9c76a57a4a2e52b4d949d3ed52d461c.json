{"ast":null,"code":"import { FormBuilder, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/category/category.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction AddCategoryComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.successMessage);\n  }\n}\n\nexport class AddCategoryComponent {\n  constructor(fb, _category, route, _route) {\n    this.fb = fb;\n    this._category = _category;\n    this.route = route;\n    this._route = _route;\n    this.loading = false;\n    this.successMessage = \"\";\n    this.categoryId = '';\n\n    this.createCategoryForm = id => {\n      if (id) {\n        this._category.getOneCategory(id).subscribe(cat => {\n          var _a, _b, _c;\n\n          this.categoryForm = this.fb.group({\n            categoryName: [(_a = cat === null || cat === void 0 ? void 0 : cat.data) === null || _a === void 0 ? void 0 : _a.categoryName],\n            subCategory: [(_b = cat === null || cat === void 0 ? void 0 : cat.data) === null || _b === void 0 ? void 0 : _b.subCategory],\n            description: [(_c = cat === null || cat === void 0 ? void 0 : cat.data) === null || _c === void 0 ? void 0 : _c.description]\n          });\n        });\n      }\n\n      this.categoryForm = this.fb.group({\n        categoryName: '',\n        subCategory: '',\n        description: ''\n      });\n    };\n\n    console.log('activated route :- ', _route);\n\n    _route.params.subscribe(data => {\n      this.categoryId = data.id;\n      this.createCategoryForm(this.categoryId);\n    });\n  }\n\n  ngOnInit() {}\n\n  saveForm() {\n    this.loading = true;\n    const {\n      value: category\n    } = this.categoryForm;\n    const observable = this.categoryId ? this._category.updateCategory(category, this.categoryId) : this._category.creatCategory(category);\n    observable.subscribe(data => {\n      this.loading = false;\n      this.successMessage = data.message;\n      this.redirect();\n    });\n  }\n\n  redirect() {\n    setTimeout(() => {\n      this.successMessage = \"\";\n      this.route.navigate(['category']);\n    }, 1000);\n  }\n\n}\n\nAddCategoryComponent.ɵfac = function AddCategoryComponent_Factory(t) {\n  return new (t || AddCategoryComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CategoryService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\n\nAddCategoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddCategoryComponent,\n  selectors: [[\"app-add-category\"]],\n  decls: 18,\n  vars: 5,\n  consts: [[\"class\", \"alert alert-success\", \"role\", \"alert\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleFormControlInput1\", 1, \"form-label\"], [\"type\", \"email\", \"formControlName\", \"categoryName\", \"placeholder\", \"Category\", 1, \"form-control\"], [\"type\", \"email\", \"formControlName\", \"subCategory\", \"placeholder\", \"Sub Category\", 1, \"form-control\"], [\"for\", \"exampleFormControlTextarea1\", 1, \"form-label\"], [\"formControlName\", \"description\", \"placeholder\", \"Description\", \"rows\", \"3\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"value\", \"disabled\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\"]],\n  template: function AddCategoryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, AddCategoryComponent_div_2_Template, 2, 1, \"div\", 0);\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AddCategoryComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.saveForm();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 3);\n      i0.ɵɵtext(10, \"Sub Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 6);\n      i0.ɵɵtext(14, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"textarea\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 2);\n      i0.ɵɵelement(17, \"input\", 8);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.categoryId ? \"Update\" : \"Add\", \" Category\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.categoryForm);\n      i0.ɵɵadvance(14);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.categoryId ? \"Update\" : \"Add\");\n      i0.ɵɵproperty(\"disabled\", ctx.loading);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 821:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ../node_modules/postcss-loader/dist/cjs.js):\\\\nError: Failed to find '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\\\\n  in [\\\\n    C:\\\\\\\\Users\\\\\\\\ak306\\\\\\\\Desktop\\\\\\\\functionup\\\\\\\\NIT-Project\\\\\\\\NIT-UI\\\\\\\\NIT-UI\\\\\\\\src\\\\\\\\app\\\\\\\\category\\\\\\\\add-category\\\\n  ]\\\\n    at C:\\\\\\\\Users\\\\\\\\ak306\\\\\\\\Desktop\\\\\\\\functionup\\\\\\\\NIT-Project\\\\\\\\NIT-UI\\\\\\\\node_modules\\\\\\\\postcss-import\\\\\\\\lib\\\\\\\\resolve-id.js:35:13\\\\n    at async Promise.all (index 0)\\\\n    at async LazyResult.runAsync (C:\\\\\\\\Users\\\\\\\\ak306\\\\\\\\Desktop\\\\\\\\functionup\\\\\\\\NIT-Project\\\\\\\\NIT-UI\\\\\\\\node_modules\\\\\\\\postcss\\\\\\\\lib\\\\\\\\lazy-result.js:396:11)\\\\n    at async Object.loader (C:\\\\\\\\Users\\\\\\\\ak306\\\\\\\\Desktop\\\\\\\\functionup\\\\\\\\NIT-Project\\\\\\\\NIT-UI\\\\\\\\node_modules\\\\\\\\postcss-loader\\\\\\\\dist\\\\\\\\index.js:95:14)\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[821]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=add-category.component.css.map*/\"]\n});","map":{"version":3,"sources":["C:\\Users\\ak306\\Desktop\\functionup\\NIT-Project\\NIT-UI\\NIT-UI\\src\\app\\category\\add-category\\add-category.component.ts","C:\\Users\\ak306\\Desktop\\functionup\\NIT-Project\\NIT-UI\\NIT-UI\\src\\app\\category\\add-category\\add-category.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms'\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CategoryResponseSingle, urlParam } from 'src/app/app.interface';\nimport { CategoryService } from 'src/app/services/category/category.service';\n@Component({\n  selector: 'app-add-category',\n  templateUrl: './add-category.component.html',\n  styleUrls: ['./add-category.component.css']\n})\nexport class AddCategoryComponent implements OnInit {\n  public categoryForm!:FormGroup;\n  public loading:boolean = false;\n  successMessage:string=\"\";\n  categoryId:string | undefined='' ;\n\n  constructor(private fb:FormBuilder, private _category:CategoryService, private route:Router, private _route:ActivatedRoute) {\nconsole.log('activated route :- ', _route);\n_route.params.subscribe((data:urlParam)=>{\n  this.categoryId = data.id; \n    this.createCategoryForm(this.categoryId); \n})\n   }\n\n  ngOnInit(): void {\n    \n  }\n\n  createCategoryForm = (id:string | undefined) =>{\n    if(id)\n    {\n      this._category.getOneCategory(id).subscribe((cat:CategoryResponseSingle | undefined)=>{\n        this.categoryForm = this.fb.group({\n          categoryName:[cat?.data?.categoryName], subCategory:[cat?.data?.subCategory], description:[cat?.data?.description]\n        })\n      });\n    }\n    this.categoryForm = this.fb.group({\n      categoryName:'', subCategory:'', description:''\n    })\n  }\n\n  saveForm(){\n    this.loading = true;\n    const {value:category} =this.categoryForm;\n    const observable = this.categoryId?this._category.updateCategory(category,this.categoryId):this._category.creatCategory(category);\n    \n    observable.subscribe((data:any)=>{\n      this.loading = false;\n      this.successMessage = data.message;\n      this.redirect();\n    })\n  }\n\n  redirect(){\n      setTimeout(()=>{\n        this.successMessage = \"\";\n        this.route.navigate(['category']);\n      },1000)\n  }\n\n}\n","<h1>{{categoryId?'Update':'Add'}} Category</h1>\n<div  class=\"alert alert-success\" role=\"alert\" *ngIf=\"successMessage\" >{{successMessage}}</div >\n<form [formGroup]=\"categoryForm\" (ngSubmit)=\"saveForm()\">\n<div class=\"mb-3\">\n  <label for=\"exampleFormControlInput1\" class=\"form-label\">Category</label>\n  <input type=\"email\" class=\"form-control\" formControlName=\"categoryName\" placeholder=\"Category\" />\n</div>\n<div class=\"mb-3\">\n  <label for=\"exampleFormControlInput1\" class=\"form-label\">Sub Category</label>\n  <input type=\"email\" class=\"form-control\" formControlName=\"subCategory\" placeholder=\"Sub Category\" />\n</div>\n<div class=\"mb-3\">\n  <label for=\"exampleFormControlTextarea1\" class=\"form-label\"\n    >Description</label\n  >\n  <textarea class=\"form-control\" formControlName=\"description\" placeholder=\"Description\" rows=\"3\"></textarea>\n</div>\n\n<div class=\"mb-3\">\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"{{categoryId?'Update':'Add'}}\" [disabled]=\"loading\" />\n</div>\n\n</form>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}